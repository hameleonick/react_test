/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	var _Calc = __webpack_require__(1);
	
	var _Calc2 = _interopRequireDefault(_Calc);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	describe("Check a Calc function", function () {
	    var a;
	
	    var calc = new _Calc2.default(5, 4);
	
	    it("Cacl - sum function", function () {
	        expect(calc.getSum()).toEqual(9);
	    });
	}); /**
	     * Created by nkapravchuk on 2/10/16.
	     */

/***/ },
/* 1 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	/**
	 * Created by nkapravchuk on 2/10/16.
	 */
	
	var Calc = function () {
	    function Calc(a, b) {
	        _classCallCheck(this, Calc);
	
	        this.a = a;
	        this.b = b;
	    }
	
	    _createClass(Calc, [{
	        key: "getSum",
	        value: function getSum() {
	            return this.a + this.b;
	        }
	    }, {
	        key: "getDiff",
	        value: function getDiff() {
	            return this.a - this.b;
	        }
	    }]);
	
	    return Calc;
	}();

	exports.default = Calc;

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgOWQ1ZWQyYThmN2IwNDU0YWJhYzgiLCJ3ZWJwYWNrOi8vLy4vQ2FsY1NwZWMuanMiLCJ3ZWJwYWNrOi8vLy4uL3NyYy9qcy9jb21wb25lbnRzL0NhbGMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7OztBQ2pDQSxVQUFTLHVCQUFULEVBQWtDLFlBQUs7QUFDbkMsU0FBSSxDQUFKLENBRG1DOztBQUduQyxTQUFJLE9BQU8sbUJBQVMsQ0FBVCxFQUFXLENBQVgsQ0FBUCxDQUgrQjs7QUFLbkMsUUFBRyxxQkFBSCxFQUEwQixZQUFLO0FBQzNCLGdCQUFPLEtBQUssTUFBTCxFQUFQLEVBQXNCLE9BQXRCLENBQThCLENBQTlCLEVBRDJCO01BQUwsQ0FBMUIsQ0FMbUM7RUFBTCxDQUFsQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQ0ZxQjtBQUNqQixjQURpQixJQUNqQixDQUFZLENBQVosRUFBZSxDQUFmLEVBQWlCOytCQURBLE1BQ0E7O0FBQ2IsY0FBSyxDQUFMLEdBQVMsQ0FBVCxDQURhO0FBRWIsY0FBSyxDQUFMLEdBQVMsQ0FBVCxDQUZhO01BQWpCOztrQkFEaUI7O2tDQU1UO0FBQ0osb0JBQU8sS0FBSyxDQUFMLEdBQU8sS0FBSyxDQUFMLENBRFY7Ozs7bUNBSUM7QUFDTCxvQkFBTyxLQUFLLENBQUwsR0FBTyxLQUFLLENBQUwsQ0FEVDs7OztZQVZRIiwiZmlsZSI6InNwZWMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG5cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGV4cG9ydHM6IHt9LFxuIFx0XHRcdGlkOiBtb2R1bGVJZCxcbiBcdFx0XHRsb2FkZWQ6IGZhbHNlXG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiB3ZWJwYWNrL2Jvb3RzdHJhcCA5ZDVlZDJhOGY3YjA0NTRhYmFjOFxuICoqLyIsIi8qKlxyXG4gKiBDcmVhdGVkIGJ5IG5rYXByYXZjaHVrIG9uIDIvMTAvMTYuXHJcbiAqL1xyXG5pbXBvcnQgQ2FsYyBmcm9tIFwiLi4vc3JjL2pzL2NvbXBvbmVudHMvQ2FsY1wiO1xyXG5cclxuZGVzY3JpYmUoXCJDaGVjayBhIENhbGMgZnVuY3Rpb25cIiwgKCk9PiB7XHJcbiAgICB2YXIgYTtcclxuXHJcbiAgICB2YXIgY2FsYyA9IG5ldyBDYWxjKDUsNCk7XHJcblxyXG4gICAgaXQoXCJDYWNsIC0gc3VtIGZ1bmN0aW9uXCIsICgpPT4ge1xyXG4gICAgICAgIGV4cGVjdChjYWxjLmdldFN1bSgpKS50b0VxdWFsKDkpO1xyXG4gICAgfSk7XHJcbn0pO1xuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vQ2FsY1NwZWMuanNcbiAqKi8iLCIvKipcclxuICogQ3JlYXRlZCBieSBua2FwcmF2Y2h1ayBvbiAyLzEwLzE2LlxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FsYyB7XHJcbiAgICBjb25zdHJ1Y3RvcihhLCBiKXtcclxuICAgICAgICB0aGlzLmEgPSBhO1xyXG4gICAgICAgIHRoaXMuYiA9IGI7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0U3VtKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYSt0aGlzLmI7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RGlmZigpe1xyXG4gICAgICAgIHJldHVybiB0aGlzLmEtdGhpcy5iO1xyXG4gICAgfVxyXG59XG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi4vc3JjL2pzL2NvbXBvbmVudHMvQ2FsYy5qc1xuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=